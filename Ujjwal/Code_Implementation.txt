Task 1:
	Given: infile.chst, infile.sift, and infile.mvect for directory, r, n.
	precalculate(video_directory,r,n,db_directory) {} outputs to db_directory
	input: 2 videos vi,vj, and video_directory, "DISTANCE_MEASURE" db_directory, output_directory
	output: histogram similarity (two distance/similarity methods)
	implementation: hist_similarity(video_directory,vi,vj,"DISTANCE_MEASURE",db_directory,output_directory) { }
	dist1_hist_similarity(directory,vi,vj,db_directory,output_directory){ }

	For histograms: Intersection Similarity, Manhattan Distance
------------------------------------------------------------------	
Task 2:
	Given: infile.chst, infile.sift, and infile.mvect for directory, r, n.
	precalculate(video_directory, r, n,db_directory) {} outputs to db_directory
	input: video v, frame range a,b, integer k, "DISTANCE_MEASURE", db_directory, output_directory
	output: k most similar frame sequences, input video(b-a frames) and output video(with k frames). 
	
	implementation:
sub_sequence_search(v,a,b,k,"DISTANCE_MEASURE",db_directory,output_directory) {}
	
	dist1_sub_sequence_search(v,a,b,k,db_directory,output_directory) {}
------------------------------------------------------------------	
Task 3:
	Given: infile.chst, infile.sift, and infile.mvect for directory, r, n.
	precalculate(video_directory, r, n,db_directory) {} outputs to db_directory	
	input: db_directory, target dimensionality d, output_directory, "REDUCTION_TECHNIQUE"- PCA/k-means
	outputs: outfiled.cpca, infiled.spca, infiled.mpca
	and 
	
	*dimensions d in terms of input vector space.
	The selected d dimensions are to be reported in the form of <original_index, score> in non-increasing order of scores.
	
	implementation:	
	dimension_reduction(db_directory,d,output_directory,"REDUCTION_TECHNIQUE") {}
	red1_dimension_reduction(db_directory, d, output_directory) {}
	
Task 4:
	Similar to task 2 but db_directory is red_db_directory.